1、toolbar与状态栏实现颜色联动
	难点：
		1、如果将toolbar设置穿透状态，Coodinatorlayout的CollapsingToolbarLayout在网上滑动的时候会留下一个状态栏的高度，这样就无法得到想要的效果

		2、无法让状态栏与toolbar实现同样的颜色

		3、通过滚动去动态改变透明度可以做到渐变，可是会隐藏控件

		3、通过设置颜值去改变控件透明度，但是计算公式太复杂

	解决方案：
		1、一个空白的toolbar在CollapsingToolbarLayout中，不穿透的话就不会留下一个状态栏的高度，只用与占位

		2、通过第三方的工具实现状态栏与toolbar相同颜色，大概原理的生成一个状态栏大小的控件把状态栏替换

		3、不设置透明度，改为设置颜色值

		4、通过Color.parseColor的方式将透明度和颜色值拼成16进制的颜色值


2、TOKEN失效再次请求和TOKEN不存在先请求TOKEN
		TOKEN不存在先请求TOKEN
				为OK设置一个请求拦截器，在intercept方法把chain的参数获取出来，如果发现参数中的TOKEN不存在，
				就发起同步请求去请求TOKEN，获取TOKEN之后继续执行请求操作，如果连续获取三次TOKEN无效则不再获取

		TOKEN失效再次请求
				为OK设置一个返回拦截器，在intercept方法把Chain的返回值获取出来，判断其中的code码是否是TOKEN失效
				如果是TOKEN失效再发起一个同步请求去获取TOKEN，接在再把上次请求的参数链接拿出来，再发起同步请求，如果连续三次TOKEN失效则不再获取
		
3、解决通讯问题
		因为EventBus很复杂，而且调用方式也不太方便，暂无法指定对象发送，也不是很希望集成太多第三方库所以自己实现了一个通讯功能，
		主要是用单例和观察者模式做了一个通讯功能，主要通讯是依赖handler实现，看过EventBus的一个实现也是用Handler做的，当注册一个订阅的
		时候会添加到一个Map集合，Map的键为订阅者的className，值为实现订阅的对象，在发送消息的时候可以指定一个类名发送一个泛型数据，然后
		判断当前的类名与集合中的key是否相同，如果相同则指定发送，也可以全体发送，在对象销毁的时候提供一个注销订阅的功能，避免内存泄漏。
		
4、NestedScrollView的smoothScrollTo无法连续定位问题，或者无法指定位置定位
		主要是因为嵌套滑动机制的关系，机制里会有对滑动惯性处理的方法onNestedFling()和onNestedPreFling()，这两个会把惯性滑动距离传递
		到子view或者父级中继续消费。然而smoothScrollTo()方法移动的时候会有惯性的原因，其实其他滑动方法也有，所以虽然指定到某个位置
		但可能因为上次的惯性问题，会在这个位置的基础上偏移很多，和预期不符，即使在觉得上次惯性停止后再尝试也无法达到预期效果，
		经过尝试各种最终在一次手动操作的时候发现一个解决方案，在多次smoothScrollTo()同一个位置的时候，可以达到预期效果，代码如下：
				for(int i =0 ; i < 5 ; i++){
					nestedScrollView.smoothScrollTo(0,y);
				}
		虽然不知道最少次数，但是5次是可以保证达到预期效果的