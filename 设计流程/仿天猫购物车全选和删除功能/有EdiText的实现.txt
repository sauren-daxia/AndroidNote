package com.example.jasonchen.testproject_1;

import android.app.Activity;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.TextView;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Jason Chen on 2017/1/20.
 */

public class TestAdapter extends BaseAdapter {
    private List<Cart> list;
    private LayoutInflater inflater;
    private Context context;
    private KeyboardChangeListener keyListener;
    private Map<Integer, EditText> editMap;

    public TestAdapter(List<Cart> list, Context context) {
        this.list = list;
        this.context = context;
        this.inflater = LayoutInflater.from(context);
        keyListener = new KeyboardChangeListener((Activity) context);
        keyListener.setKeyBoardListener(keyBoardListener);
        editMap = new HashMap<>();

    }

    private KeyboardChangeListener.KeyBoardListener keyBoardListener = new KeyboardChangeListener.KeyBoardListener() {
        @Override
        public void onKeyboardChange(boolean isShow, int keyboardHeight) {

            if (isShow) {

            } else {

            }
        }
    };

    @Override
    public int getCount() {
        return 20;
    }

    @Override
    public Object getItem(int position) {
        return list.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        ViewHolder holder = null;
        if (convertView == null) {
            holder = new ViewHolder();
            convertView = inflater.inflate(R.layout.layout_edit_item, null);
            holder.edit = (EditText) convertView.findViewById(R.id.edit);
            holder.subBtn = (Button) convertView.findViewById(R.id.btn_sub);
            holder.addBtn = (Button) convertView.findViewById(R.id.btn_add);
            holder.selectCb = (CheckBox) convertView.findViewById(R.id.cb_select);
            holder.contentTv = (TextView) convertView.findViewById(R.id.tv_content);

            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        holder.selectCb.setTag(position);
        holder.addBtn.setTag(position);
        holder.subBtn.setTag(position);

        holder.contentTv.setText(list.get(position).getName());
        holder.edit.setText(list.get(position).getEdit());
        if (!editMap.containsKey(position)) {
            editMap.put(position, holder.edit);
        }

        if (list.get(position).getIsCheck() == 1) {   //选中
            holder.selectCb.setChecked(true);
        } else {
            holder.selectCb.setChecked(false);
        }

        holder.selectCb.setOnCheckedChangeListener(checkListener);
        

        addOnSub(holder.edit, holder.subBtn, holder.addBtn, position);

        return convertView;
    }

    private CompoundButton.OnCheckedChangeListener checkListener = new CompoundButton.OnCheckedChangeListener() {
        @Override
        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
            int tag = (int) buttonView.getTag();
            if (isChecked) {
                list.get(tag).setIsCheck(1);
            } else {
                list.get(tag).setIsCheck(0);
            }
            notifyDataSetChanged();
        }
    };
    private int index = -1;
    private void addOnSub(final EditText edit, Button subBtn, Button addBtn, final int position) {
        subBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int tag = (int) v.getTag();

                int num = Integer.parseInt(edit.getText().toString());
                num--;

                list.get(tag).setEdit(num + "");
                notifyDataSetChanged();
            }
        });
        addBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int tag = (int) v.getTag();
                int num = Integer.parseInt(edit.getText().toString());
                num++;

                list.get(tag).setEdit(num + "");
                notifyDataSetChanged();
            }
        });
        edit.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if(hasFocus){
                    index = position;
                }else{
                    String tempValue = ((EditText) v).getText().toString();
                    list.get(index).setEdit(tempValue);
                    notifyDataSetChanged();
                }
            }
        });
    }


    private static class ViewHolder {
        EditText edit;
        Button subBtn, addBtn;
        CheckBox selectCb;
        TextView contentTv;
    }



    private static final String TAG = "TestAdapter";
}
