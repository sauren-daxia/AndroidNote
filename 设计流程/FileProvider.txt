https://juejin.im/post/5974ca356fb9a06bba4746bc


1、要在res下建立一个xml目录

2、在xml目录下创建一个resource文件，随意命名，但不得与其他使用过fileprovider的资源名重名

3、打开xml下的resource文件
<resources>
    <paths>
	//该节点表示分享外存文件目录，
	//path的作用是表示分享根目录下的哪个文件，或全部文件，"."表示分享当前目录下所有目录
	//name的作用是将path的路径重命名，也可以看做是遮盖path的原路径。例如：
	//原路径：/storage/emulated/0/weiyin/card_gobook/Save/file/update/card_gobook/V1.0.3.apk
	//下面设置的分享路径：weiyin/card_gobook/Save/file/update/card_gobook/
	//命名后：hm_DCIM/v1.0.3.apk，这样其他人就看不到原来的路径了
        <external-path name="hm_DCIM" path="weiyin/card_gobook/Save/file/update/card_gobook/" />
    </paths>
</resources>

4、在manifest中配置provider
<provider
	//name默认其实是android.support.v4.content.FileProvider，但是因为可能第三方使用了，
	所以最好自己定义一个FileProvider,只需要继承FileProvider即可，什么都不需要重写
	//authorities是一个唯一标识，如果配置有多个provider的话，authorities必须不一样，名字随便取
	//exported表示是否分享给别人使用这个权限
	//grantUriPermissions表示是否使用的时候才授权，授权后直到退出就取消授权了
	//meta的name固定值
	//meta的resource就是我们在xml里面定义的那个文件
            android:name=".util.MyProvider"					
            android:authorities="com.weiyin.card_gobook.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_path" />
</provider>

5、使用
	1)例如安装APK
	Intent intent = new Intent(Intent.ACTION_VIEW);
	//判断是否大于7.0
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
            intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

	    //这里的第二个参数必须与manifest中的authorities对应，并且区分大小写

            Uri contentUri = FileProvider.getUriForFile(this, "com.weiyin.card_gobook.fileprovider",new File("/storage/emulated/0/weiyin/card_gobook/Save/file/update/card_gobook/V1.0.3.apk"));
            intent.setDataAndType(contentUri, "application/vnd.android.package-archive");
        } else {
            intent.setDataAndType(Uri.fromFile(new File(filePath)), "application/vnd.android.package-archive");
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        }
        if (getPackageManager().queryIntentActivities(intent, 0).size() > 0) {
            startActivity(intent);
        }