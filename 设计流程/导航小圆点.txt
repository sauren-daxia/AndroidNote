1、在ScrollView或者ViewPager中重写onScrollChanged，再提供接口
	//因为这个方法不对外提供，需要重写获取里面的值，再自定义回调传出去
	@Override
	protected void onScrollChanged(int l, int t, int oldl, int oldt) {
		// TODO Auto-generated method stub
		super.onScrollChanged(l, t, oldl, oldt);
		if(listener!= null){
			listener.onScrollListener(l, t, oldl, oldt);
		}
	}
	
	//提供接口
	public interface OnScrollListener {
		void onScrollListener(int l , int t, int oldl, int oldt);
	}
	public OnScrollListener listener;
	public void setOnScrollListener(OnScrollListener listener){
		this.listener = listener;
	}

2、在onWindowFocusChanged()中获取一排小圆点中的单个宽度，用于滑动的长度
	private int pagerWidth;
	private int textWidth;
	@Override
	public void onWindowFocusChanged(boolean hasFocus) {

		super.onWindowFocusChanged(hasFocus);
		if(hasFocus){
			//先获取静态小圆点的宽度
			textWidth =mUserDetail_shoppingRecordText.getWidth();
			//再通过动态小圆点获取参数对象
			LayoutParams params2 = mUserDetail_Line.getLayoutParams();
			params2.width = textWidth;
			//最后给动态小圆点设置静态小圆点的宽度
			mUserDetail_Line.setLayoutParams(params2);
			pagerWidth = mUserDetail_ViewPager.getWidth();
		}
	}

3、使用在ViewPager提供出来的回调计算动态小圆点的滑动效果
	private OnScrollListener listener = new OnScrollListener() {
		
@Override
public void onScrollListener(int l, int t, int oldl, int oldt) {		//横向的滑动控件第一个参数才会变，第二个参数是纵向滑动才会变
	//计算选项卡的移动
	int mTabLayoutScrollX = -(l * (textWidth - mUserDetail_ScrollView.getWidth()) / (pagerWidth * (mPagerAdapter.getCount()- 1)));
	mUserDetail_TabLayout.scrollTo(mTabLayoutScrollX, 0);
	//计算线条的移动,移动的不是线，是包裹线的容器
	int mLineScrollX =	-(l * textWidth / pagerWidth);
	mLineScrollX = mLineScrollX + mTabLayoutScrollX;
	mUserDetail_LineLayout.scrollTo(mLineScrollX, 0);
		}
	};