1、先获取图片还有控件的宽高
	int imgWidth = img.getWidth();
	int imgHeight = img.getHeight();
	int bitmapWidth = bitmap.getWidth();
	int bitmapHeight = bitmap.getHeight();

2、创建一个与控件大小的Bitmap用于绘制不规则图形
	Bitmap dstBitmap = Bitmap.createBitmap(imgWidth,imgHeight,Config.ARGB_8888);

3、创建画布、画笔、路径并设置属性
	Canvas canvas = new Canvas(dstBitmap);
	Paint paint = new Paint();
	paint.setAntiAlias(true)	//抗锯齿
	Path paht = new Path();

4、绘制不规则路径
	path.moveTo(0,0);
	path.LineTo(imgWidth,0);
	....
	path.close();

4、绘制
	canvas.drawPath(path,paint)		//先绘制形状
	paint.setXfermode(new PorterDuffXfermode(Mode.Src_IN));		//设置绘制的位置，当前Bitmap与原Bitmap重叠的地方才绘制，不重叠不绘制
	
	//计算需要绘制的控件区域
	RectF src = new RectF(0,0,imgWidth,imgHeight);
	//计算需要绘制的内容
        Rect dstRect = null;
        if(1f*imgWidth/imgHeight > 1f*bitmapWidth/bitmapHeight){
            //代表截图的图片的高度
            int finalHeight = imgHeight*bitmapWidth/imgWidth;
            dstRect = new Rect(0, (bitmapHeight-finalHeight)/2, bitmapWidth, bitmapHeight-(bitmapHeight-finalHeight)/2);
        }else{
            //代表截图的图片的宽度
            int finalWidth = imgWidth*bitmapHeight/imgHeight;
            dstRect = new Rect((bitmapWidth-finalWidth)/2, 0, bitmapWidth-(bitmapWidth-finalWidth)/2, bitmapWidth);
        }

	//将计算好的内容区域，绘制到控件的区域
	canvas.drawBitmap(bitmapSrc, src , dstRect, paint);

	/**
	 * 矩形圆角Bitmap
	 * @param srcBitmap
	 * @return
	 */
	public static Bitmap createRoundBitmap(Bitmap srcBitmap){
		if(srcBitmap == null){
			return srcBitmap;
		}
		//获取Bitmap宽高
		int bmWidth = srcBitmap.getWidth();
		int bmHeight = srcBitmap.getHeight();

		//创建一个与原来Bitmap一样大小的Bitmap
		Bitmap bitmap = Bitmap.createBitmap(bmWidth, bmHeight, Config.ARGB_8888);
		Canvas canvas = new Canvas(bitmap);
		Paint paint = new Paint();
		paint.setAntiAlias(true);

		//画一个以原Bitmap大小的圆形
		RectF rect = new RectF(0, 0, bmWidth, bmHeight);
		canvas.drawRoundRect(rect , 15, 15, paint);
		paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));  
		canvas.drawBitmap(srcBitmap, 0, 0, paint);  
		return bitmap;
	}