JPushInterface.setDebugMode(true);		//新文档中不建议设置，如果没收到通知，请修改这里，设置调试模式，真正APP开发设置false

JPushInterface.init(this);			//注册

JPushInterface.setAlias(this,"name",CallBack)	//设置别名，可以进行针对行的推送，回调可以判断是否设置成功，参数1：0为成功

JPushInterface.setTag(this,Set<String>,CallBack)//设置Tag组，假如是一个新闻客户端,Tag是某种新闻，如果用户关注了多种Tag，就可针对关注这些Tag的用户推送



 /**
     * 设置极光推送的别名
     */
    public void setAlias(String pushKey) {
        String alias = pushKey.trim();
        if (TextUtils.isEmpty(alias)) {
            Log.d(TAG, "gotResult: --------极光推送设置别名的pushKey为空 pushKey = " + pushKey);
            return;
        }
        // 调用 Handler 来异步设置别名
        mHandler.sendMessage(mHandler.obtainMessage(MSG_SET_ALIAS, alias));
    }

    private final TagAliasCallback mAliasCallback = new TagAliasCallback() {
        @Override
        public void gotResult(int code, String alias, Set<String> tags) {
            String logs;
            switch (code) {
                case 0:
                    logs = "Set tag and alias success";
                    Log.i(TAG, logs);
                    // 建议这里往 SharePreference 里写一个成功设置的状态。成功设置一次后，以后不必再次设置了。
                    SharedPreferencesUtil.saveJPushAlias(KeXianSenApplication.getInstance(), "1");
                    break;
                case 6002:
                    logs = "Failed to set alias and tags due to timeout. Try again after 60s.";
                    Log.i(TAG, logs);
                    // 延迟 60 秒来调用 Handler 设置别名
                    mHandler.sendMessageDelayed(mHandler.obtainMessage(MSG_SET_ALIAS, alias), 1000 * 60);
                    mHandler.sendMessageDelayed(mHandler.obtainMessage(MSG_SET_TAGS, tags), 1000 * 60);
                    break;
                default:
                    logs = "Failed with errorCode = " + code;
                    Log.e(TAG, logs);
            }
            Log.d(TAG, "gotResult: --------极光推送设置别名msg = " + logs);
        }
    };
    private static final int MSG_SET_ALIAS = 1001;
    private static final int MSG_SET_TAGS = 1002;
    private final Handler mHandler = new Handler() {
        @Override
        public void handleMessage(android.os.Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case MSG_SET_ALIAS:
                    Log.d(TAG, "Set alias in handler.");
                    // 调用 JPush 接口来设置别名。
                    JPushInterface.setAliasAndTags(getApplicationContext(),
                            (String) msg.obj,
                            null,
                            mAliasCallback);
                    break;
                case MSG_SET_TAGS:
                    Log.d(TAG, "Set tags in handler.");
                    // 调用 JPush 接口来设置别名。
                    JPushInterface.setAliasAndTags(getApplicationContext(),
                            null,
                            (Set<String>) msg.obj,
                            mAliasCallback);
                    break;
                default:
                    Log.i(TAG, "Unhandled msg - " + msg.what);
            }
        }
    };
