1、文件上传基本写法

public interface FileUploadService {  
    // 上传单个文件
    @Multipart
    @POST("upload")
    Call<ResponseBody> uploadFile(
            @Part("description") RequestBody description,
            @Part MultipartBody.Part file);

    // 上传多个文件
    @Multipart
    @POST("upload")
    Call<ResponseBody> uploadMultipleFiles(
            @Part("description") RequestBody description,
            @Part MultipartBody.Part file1,
            @Part MultipartBody.Part file2);
}


2、加强版 ，参数和文件一起传

 @Multipart
@POST(RxUrl.PUSH_ACTIVE_CIRCLE)
Observable<String> pushActiveCircle(@PartMap Map<String, RequestBody> map, @Part List<MultipartBody.Part> files);

 List<MultipartBody.Part> parts = new ArrayList<>();
        for (int i = 0; i < photoList.size(); i++) {
            if (TextUtils.isEmpty(photoList.get(i).getUrl())) {
                break;
            }
            File file = new File(photoList.get(i).getUrl());
            RequestBody body = RequestBody.create(MediaType.parse("multipart/form-data"), file);
            parts.add(MultipartBody.Part.createFormData("pic[" + i + "]", file.getName(), body));
        }

Map<String, RequestBody> map = new HashMap<>();
map.put("content", RequestBody.create(MediaType.parse("text/plain"), appraiseEt.getText().toString().trim() + ""));

api.setFiles(parts);
api.setBodyMap(map);