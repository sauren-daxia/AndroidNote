Github：https://github.com/LuckSiege/PictureSelector

1、在项目builder.gradle中添加
allprojects {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}
2、在APP.builde.gradle中依赖
    compile 'com.github.LuckSiege.PictureSelector:picture_library:v2.1.1'

3、在manifest中添加7.0适配
    <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

4、使用
	    /**
     * 打开相册
     */
    private void openGallery() {
        PictureSelector.create(getActivity())
                .openGallery(PictureMimeType.ofImage())
                .minSelectNum(1)
                .maxSelectNum(1)
                .previewImage(true)
                .enableCrop(true)
                .isZoomAnim(true)
                .compress(true)
                .compressMode(LUBAN_COMPRESS_MODE)
                .hideBottomControls(true)
                .freeStyleCropEnabled(true)
                .showCropFrame(true)
                .previewEggs(true)
                .forResult(PictureConfig.CHOOSE_REQUEST);
    }

     /**
     * 打开相机
     */
    private void openCamear() {
        PictureSelector.create(getActivity())
                .openCamera(PictureMimeType.ofImage())
                .previewImage(true)
                .enableCrop(true)
                .compress(true)
                .hideBottomControls(true)
                .freeStyleCropEnabled(true)
                .showCropFrame(true)
                .previewEggs(true)
                .compressMode(LUBAN_COMPRESS_MODE)
                .forResult(PictureConfig.CHOOSE_REQUEST);
    }

5、获取路径
 @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == RESULT_OK && requestCode == PictureConfig.CHOOSE_REQUEST && data != null) {
            List<LocalMedia> list = PictureSelector.obtainMultipleResult(data);
            if (list != null && list.size() > 0) {
                String path = "";
                if (list.get(0).isCompressed()) {
                    path = list.get(0).getCompressPath();
                } else if (list.get(0).isCut()) {
                    path = list.get(0).getCutPath();
                } else {
                    path = list.get(0).getPath();
                }
                if (!TextUtils.isEmpty(path)) {
                    Intent intent = new Intent();
                    intent.putExtra("path", path);
                    PhotoSelectDialog.this.getActivity().setResult(2, intent);
                } else {
                    Toast.makeText(PhotoSelectDialog.this.getActivity(), "图片选择错误", Toast.LENGTH_SHORT).show();
                }
            }
        }
    }



方法：
.openGallery()//全部.PictureMimeType.ofAll()、图片.ofImage()、视频.ofVideo()
 	.theme()//主题样式(不设置为默认样式) 也可参考demo values/styles下 例如：R.style.picture.white.style
 	.maxSelectNum()// 最大图片选择数量 int
 	.minSelectNum()// 最小选择数量 int
	.imageSpanCount(4)// 每行显示个数 int
 	.selectionMode()// 多选 or 单选 PictureConfig.MULTIPLE or PictureConfig.SINGLE
 	.previewImage()// 是否可预览图片 true or false
 	.previewVideo()// 是否可预览视频 true or false
	.enablePreviewAudio() // 是否可播放音频 true or false
 	.isCamera()// 是否显示拍照按钮 true or false
	.isZoomAnim(true)// 图片列表点击 缩放效果 默认true
	.sizeMultiplier(0.5f)// glide 加载图片大小 0~1之间 如设置 .glideOverride()无效
	.setOutputCameraPath("/CustomPath")// 自定义拍照保存路径,可不填
 	.enableCrop()// 是否裁剪 true or false
 	.compress()// 是否压缩 true or false
 	.glideOverride()// int glide 加载宽高，越小图片列表越流畅，但会影响列表图片浏览的清晰度
 	.withAspectRatio()// int 裁剪比例 如16:9 3:2 3:4 1:1 可自定义
 	.hideBottomControls()// 是否显示uCrop工具栏，默认不显示 true or false
 	.isGif()// 是否显示gif图片 true or false
	.compressSavePath(getPath())//压缩图片保存地址
 	.freeStyleCropEnabled()// 裁剪框是否可拖拽 true or false
 	.circleDimmedLayer()// 是否圆形裁剪 true or false
 	.showCropFrame()// 是否显示裁剪矩形边框 圆形裁剪时建议设为false   true or false
 	.showCropGrid()// 是否显示裁剪矩形网格 圆形裁剪时建议设为false    true or false
 	.openClickSound()// 是否开启点击声音 true or false
 	.selectionMedia()// 是否传入已选图片 List<LocalMedia> list
 	.previewEggs()// 预览图片时 是否增强左右滑动图片体验(图片滑动一半即可看到上一张是否选中) true or false
 	.cropCompressQuality()// 裁剪压缩质量 默认90 int
 	.minimumCompressSize(100)// 小于100kb的图片不压缩 
 	.synOrAsy(true)//同步true或异步false 压缩 默认同步
 	.cropWH()// 裁剪宽高比，设置如果大于图片本身宽高则无效 int 
 	.rotateEnabled() // 裁剪是否可旋转图片 true or false
 	.scaleEnabled()// 裁剪是否可放大缩小图片 true or false
 	.videoQuality()// 视频录制质量 0 or 1 int
	.videoMaxSecond(15)// 显示多少秒以内的视频or音频也可适用 int 
        .videoMinSecond(10)// 显示多少秒以内的视频or音频也可适用 int 
	.recordVideoSecond()//视频秒数录制 默认60s int
 	.forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code     