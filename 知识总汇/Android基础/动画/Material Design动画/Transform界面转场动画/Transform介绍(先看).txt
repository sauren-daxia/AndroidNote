https://blog.csdn.net/qibin0506/article/details/48129139
https://blog.csdn.net/qibin0506/article/details/53248597

## 界面过度动画分两种
* 普通跳转
* 共享元素

## 动画种类
* 退出 -> 进入  -> 返回   -> 重新进入
* Exit -> Enter -> Return -> Reenter

## 系统提供类，都基于Transition
* `Fade()`
* `Slide()`
* `Explode()`
* `ChangeBounds()`
* `ChangeBounds()`
* `ChangeScroll` API24才有
* `ChangeTransform()`
* `ChangeClipBounds`
* `AutoTransition`

## API：
|API介绍					|解释|
|:-:|:-:|
|transition.setDuration()			|设置动画的时间。类型：long|
|transition.setInterpolator()			|设置修饰动画，定义动画的变化率，具体设置往下翻就看到了|
|transition.setStartDelay()			|设置动画开始时间，延迟n毫秒播放。类型：long|
|transition.setPathMotion()			|设置动画的运行路径|
|transition.setMode()				|改变动画 出现/消失 的模式。Visibility.MODE_IN:进入；Visibility.MODE_OUT：退出。|
|transition.addListener()			|设置动画的监听事件|

## Style配置(必须)
```java
<!-- 可以在APPTheme，那么所有Activity都有这个功能，也可以单独配置某些Activity -->
<style name="myTheme" parent="android:Theme.Material">  
	<!-- 必须 -->
	<item name="android:windowContentTransitions">true</item>				开启动画 允许使用transitions

	<!-- 必须 -->
	<item name="android:windowAllowEnterTransitionOverlap">true</item>			是否覆盖执行，其实可以理解成前后两个页面是同步执行还是顺序执行
	<!-- 必须 -->
	<item name="android:windowAllowReturnTransitionOverlap">true</item>			与上面相同。即上一个设置了退出动画，这个设置了进入动画，两者是否同时执行。

	<!-- 根据需要 -->
	<item name="android:windowContentTransitionManager">true</item>				引用TransitionManager XML资源，定义不同窗口内容之间的所需转换。
	
	<!-- 根据需要 -->
	<item name="android:windowSharedElementsUseOverlay">@android:transition/move</item>	指示共享元素在转换期间是否应使用叠加层
</style>
```

## 系统提供资源
* ` @android:transition/move `
* ` @android:transition/explode `
* ` @android:transition/fade `
* ` @android:transition/explode `
* ` @android:transition/slide_top `
* ` @android:transition/slide_bottom `
* ` @android:transition/slide_left `
* ` @android:transition/slide_right `



## 自定义XML动画
* 在res文件目录定义一个transition目录，然后编写动画
```
	<transitionSet xmlns:android="http://schemas.android.com/apk/res/android">
		<changeBounds/>				//为目标视图的布局边界的变化添加动画。
		<changeTransform/>			//为目标视图的裁剪边界的变化添加动画。
		<changeClipBounds/>			//为目标视图的缩放与旋转变化添加动画。
		<changeImageTransform/>			//为目标图像的大小与缩放变化添加动画。
	</transitionSet>
```
