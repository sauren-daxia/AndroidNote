序列是指存入和取出的顺序是否一致。

List子类的特点：（有序）

	ArrayList特点：
	底层结构是数组类型：查询快，增删慢；
	线程不安全，效率高

	Vector特点：
	底层结构是数组类型：查询快，增删慢；
	线程安全，效率低，但因为线程安全所以导致查询也不快，已经退伍的集合

	LinkedList特点：
	底层数据结构是链表类型：查询慢，增删快；
	线程不安全，效率高。

	使用需求看情况：
	
	需要安全？
		要：vector（已有替代，不使用）
		不要：ArrayList 和 LinkedList
			查询多：ArrayList
			增删多：LinkedList

	如果没需求，通用ArrayList

Set子类的特点:（无序）
	
	hashSet特点：
	底层结构是哈希表，确保元素唯一
	哈希表依赖hashCode 和 equals两个方法

	执行顺序：	
		首先判断hashCode 值是否相同
			是：继续执行equals，看返回值
				true：说明是重复元素，不添加
				false：直接添加元素
			否：直接添加元素
	在类里自动生成hashCode 和 equals方法即可

		LinkedhashSet特点：
		底层结构是由哈希表和链表两种结构组成，确保元素有序并且唯一

	TreeSet特点：
	底层结构是二叉树(红黑二叉树)，确保元素唯一并且有序
	如果保证排序？
		两种方式
			自然排序：让元素所属类实现comparable接口
			比较器：让集合接收comparator的实现对象

	Map（双列集合）
		A:Map集合的数据结构仅仅针对键有效，与值无关
		B：存储的是键值对形式的元素，键值唯一，值可重复
		hashMap：
			底层结构与set一致，线程不安全，效率高
			linkedHashMap
		Hashtable：
			底层结构与set一致，线程安全，效率低
		TreeMap	