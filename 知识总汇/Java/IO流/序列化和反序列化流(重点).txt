ObjectOutputStream：序列化流

构造：
-----------------------------------
public		ObjectOutputStream(FileOutputStream file)	//需要一个操作字节输出流对象

方法：
-------------------------
void		writeObject(Object obj)	//序列化一个对象，可用于文件传输或网络传输使用。


ObjectInputStream：反序列化流

构造:
----------------------------------
public		ObjectInputStream(FileInputStream file)		//需要一个操作字节流的输入对象

方法：
--------------------------
Object		readObject()		//读取一个对象，并返回Object类型


transient关键字			//被它标识的变量可以不被序列化，并且它修饰后的变量值为类型初始值
使用方法：	private transient int i;

(重点)
  ↓
--------------------------------
PS:
1、需要序列化的对象的类必须实现	Serializable 接口，它里面没有任何方法，只需要实现接口即可！！

2、实现 Serializable 接口后，类文件会产生一个UID值，写入读取都会进行这个值的匹配，如果写入文件后修改了类内容，直接会影响值的变化，再读取的时候就会报错。

3、解决UID值的方法：实现接口后类会产生黄色警告，点击提示，选择第二个解决方案，添加一个随类改动而变动的值，就不会影响读写