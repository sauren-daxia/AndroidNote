FileInputStream：

构造方法：
----------------------------------------
public		FileInputStream(String name)		//文件路径
public		FileInputStream(File file)		//路径对象
----------------------------------------

读取方法：
----------------------------------------
int		read()			//读取一个字节，有next的功能，自动移到下一个字节，返回读取到的ASCII码，如果返回-1则说明已经读完
int		read(byte[] b)		//读取一组字节，并存于数组中，效率高，返回实际读取字节个数，如果返回-1则说明已经读完

PS：在计算机中中文的存储分两个字节：
	第一个肯定是负数，第二个常是负数，也可能是正数，但不影响，当系统读到一个负数的时候会识别它是一个中文，会再读取一个数后转换为中文

释放资源：
----------------------------------------
void		close()			//关闭流

----------------------------------------
完整版读取所有数据格式

int by = 0;
while(by = fis.read() != -1){
	syso(by)
}

byte[] bys =new byte[1024]
int len = 0;
while(len = fis.read(bys) != -1){
	syso(new String(bys,0,len))	//String的构造方法，把数组从0开始到实际读取到的长度转换为字符串
}

PS：字节数组读取的注意要点：
假如有两行字符，一次只读取5个字节数组
ab
cde

两次读取后的结果分别为：
ab
c
de
c
原因：第一次读取的时候数组是[a][b][\][n][c]	//换行字符也会当字节读取
      第二次读取的时候数组是[d][e][\][n][c]	//最后一个C是上一次数组读取的内容，但是第二次读取只读了4个，并没有完全覆盖，所以会打印C